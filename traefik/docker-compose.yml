version: '3.7'

services:
  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.10
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      --providers.docker=true
      --api.insecure=true 
      --log.filePath=/var/log/traefik/traefik.log
      --log.level=DEBUG
      --accesslog=true
      --accesslog.filepath=/var/log/traefik/access.log
      --tracing.jaeger=true
      --tracing.jaeger.propagation=jaeger
      --tracing.jaeger.collector.endpoint=http://10.1.2.48:14268/api/traces?format=jaeger.thrift
      --experimental.plugins.traefik-api-key-middleware.modulename=github.com/dtomlinson91/traefik-api-key-middleware
      --experimental.plugins.traefik-api-key-middleware.version=v0.1.2
      --experimental.plugins.AddForwardedHeader.moduleName=github.com/jerrywoo96/AddForwardedHeader
      --experimental.plugins.AddForwardedHeader.version=v1.0.1
      # --api.dashboard=true
      # --entrypoints.http.address=:80

    restart: "always"
    ports:
      # The HTTP port
      - "7777:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8888:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik:/var/log/traefik

    # labels:


      # - "traefik.http.routers.traefik-dashboard-http-router.entrypoints: http"
      # # Enable basic authentication middleware for the dashboard
      # - "traefik.http.middlewares.traefik-dashboard-auth.basicauth.users=admin:$$2a$$14$$Pn4dBKjJOAAyGwbk4WExgufwp/tgmgnecy6WDNj8FxoyENwdf1woK"

      # # Create a router to handle dashboard traffic and apply the basic auth middleware
      # - "traefik.http.routers.traefik-dashboard-http-router.rule=Host(`dashboard.docker.localhost`) || Path(/dash)"
      # - "traefik.http.routers.traefik-dashboard-http-router.service=api@internal"
      # - "traefik.http.routers.traefik-dashboard-http-router.middlewares: traefik-dashboard-auth"


  wsrs-v3:
    image: parinyacoj/wsrs-api-v3:tag
    restart: "always"
    ports:
    - "10001:9000"  
    #scaling  
    # ports:  
    #   - "10001-10010:9000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wsrs-v3.rule=Host(`wsrs-v3.docker.localhost`)"


  case-gateway:
    image: parinyacoj/case-gateway:1.1.2
    restart: "always"
    # ports:
    # - "9003:9003"  
    # >> scaling  
    # >>  docker-compose up -d --scale case-gateway=2
    ports:  
       - "10002:9003"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.case-gateway.rule=Host(`case-gateway.docker.localhost`) || PathPrefix(`/labor`) || (Host(`coj-x.coj.intra`) && Path(`/labor`))"
      
      - "traefik.http.routers.case-gateway.middlewares=regEx,apiKey,forwardedHeaders"
      - "traefik.http.middlewares.regEx.replacepathregex.regex=^/labor(.*)"
      - "traefik.http.middlewares.regEx.replacepathregex.replacement=/api/v1$${1}"


      - "traefik.http.middlewares.apiKey.plugin.traefik-api-key-middleware.authenticationHeader=true"
      - "traefik.http.middlewares.apiKey.plugin.traefik-api-key-middleware.authenticationheaderName=X-API-KEY"
      - "traefik.http.middlewares.apiKey.plugin.traefik-api-key-middleware.bearerHeader=true"
      - "traefik.http.middlewares.apiKey.plugin.traefik-api-key-middleware.bearerHeaderName=Authorization"
      - "traefik.http.middlewares.apiKey.plugin.traefik-api-key-middleware.removeHeadersOnSuccess=true"
      - "traefik.http.middlewares.apiKey.plugin.traefik-api-key-middleware.keys=b8e471ed-9f78-4b0e-9f0d-ba3c9339f3b6,ff08048b-ebf9-4dca-b3bd-2935738dd108"  

      # ADD HEADER# Use the forwarded middleware
      - "traefik.http.middlewares.forwardedHeaders.headers.customrequestheaders.X-Real-IP=request.headers.X-Real-IP"
      - "traefik.http.middlewares.forwardedHeaders.headers.customrequestheaders.system_id=1"
      - "traefik.http.middlewares.forwardedHeaders.headers.customrequestheaders.system_code=LABOR"


  #sหมายบังคับคดี
  exwar-gateway:
    image: parinyacoj/case-gateway:1.1.2
    restart: "always"
    # ports:
    # - "9003:9003"  
    # >> scaling  
    # >>  docker-compose up -d --scale case-gateway=2
    ports:  
       - "10004:9003"
    labels:
      - "traefik.enable=true"
      #- "traefik.http.routers.exwar-gateway.rule=Host(`exwar-gateway.docker.localhost`) || Host(`coj-x.coj.intra`) ||  PathPrefix(`/exwar`)"
      - "traefik.http.routers.exwar-gateway.rule=Host(`exwar-gateway.docker.localhost`) ||  PathPrefix(`/exwar`) || (Host(`coj-x.coj.intra`) && Path(`/exwar`)) "
      - "traefik.http.routers.exwar-gateway.middlewares=regExEW,apiKeyEW,forwardedHeadersEW"
      - "traefik.http.middlewares.regExEW.replacepathregex.regex=^/exwar(.*)"
      - "traefik.http.middlewares.regExEW.replacepathregex.replacement=/api/v1$${1}"


      - "traefik.http.middlewares.apiKeyEW.plugin.traefik-api-key-middleware.authenticationHeader=true"
      - "traefik.http.middlewares.apiKeyEW.plugin.traefik-api-key-middleware.authenticationheaderName=X-API-KEY"
      - "traefik.http.middlewares.apiKeyEW.plugin.traefik-api-key-middleware.bearerHeader=true"
      - "traefik.http.middlewares.apiKeyEW.plugin.traefik-api-key-middleware.bearerHeaderName=Authorization"
      - "traefik.http.middlewares.apiKeyEW.plugin.traefik-api-key-middleware.removeHeadersOnSuccess=true"
      - "traefik.http.middlewares.apiKeyEW.plugin.traefik-api-key-middleware.keys=b8e471ed-9f78-4b0e-9f0d-ba3c9339f3b6,ff08048b-ebf9-4dca-b3bd-2935738dd108"  

      # ADD HEADER# Use the forwarded middleware
      - "traefik.http.middlewares.forwardedHeadersEW.headers.customrequestheaders.X-Real-IP=request.headers.X-Real-IP"
      - "traefik.http.middlewares.forwardedHeadersEW.headers.customrequestheaders.system_id=2"
      - "traefik.http.middlewares.forwardedHeadersEW.headers.customrequestheaders.system_code=EXWAR"
      

  inheritance-service:
    image: parinyacoj/inheritance-service:1.0.3
    restart: "always"
    # ports:
    # - "9003:9003"  
    # >> scaling  
    # >>  docker-compose up -d --scale case-gateway=2
    ports:  
       - "10003:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.inheritance-service.rule=Host(`inheritance-service.docker.localhost`) || (Host(`coj-x.coj.intra`) || && Path(`/inherit`)) || PathPrefix(`/inherit`)"
      
      - "traefik.http.routers.inheritance-service.middlewares=regExIHT,apiKeyIHT"
      - "traefik.http.middlewares.regExIHT.replacepathregex.regex=^/inherit(.*)"
      - "traefik.http.middlewares.regExIHT.replacepathregex.replacement=/api/v1$${1}"



      - "traefik.http.middlewares.apiKeyIHT.plugin.traefik-api-key-middleware.authenticationHeader=true"
      - "traefik.http.middlewares.apiKeyIHT.plugin.traefik-api-key-middleware.authenticationheaderName=X-API-KEY"
      - "traefik.http.middlewares.apiKeyIHT.plugin.traefik-api-key-middleware.bearerHeader=true"
      - "traefik.http.middlewares.apiKeyIHT.plugin.traefik-api-key-middleware.bearerHeaderName=Authorization"
      - "traefik.http.middlewares.apiKeyIHT.plugin.traefik-api-key-middleware.removeHeadersOnSuccess=true"
      - "traefik.http.middlewares.apiKeyIHT.plugin.traefik-api-key-middleware.keys=b8e471ed-9f78-4b0e-9f0d-ba3c9339f3b6,ff08048b-ebf9-4dca-b3bd-2935738dd108"  


  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    restart: "always"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`) || Path(`/whoami`) || HeadersRegexp(`X-Forwarded-For`, `.+`)"
      - "traefik.http.routers.whoami.middlewares=apiKey"


      #API-KEY AUTHEN
      - "traefik.http.middlewares.apiKey.plugin.traefik-api-key-middleware.authenticationHeader=true"
      - "traefik.http.middlewares.apiKey.plugin.traefik-api-key-middleware.authenticationheaderName=X-API-KEY"
      - "traefik.http.middlewares.apiKey.plugin.traefik-api-key-middleware.bearerHeader=true"
      - "traefik.http.middlewares.apiKey.plugin.traefik-api-key-middleware.bearerHeaderName=Authorization"
      - "traefik.http.middlewares.apiKey.plugin.traefik-api-key-middleware.removeHeadersOnSuccess=true"
      - "traefik.http.middlewares.apiKey.plugin.traefik-api-key-middleware.keys=b8e471ed-9f78-4b0e-9f0d-ba3c9339f3b6,ff08048b-ebf9-4dca-b3bd-2935738dd108"  


